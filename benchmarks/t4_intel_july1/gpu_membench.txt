{'CommandId': 'f2c76ca5-adc8-490c-9a31-cf21abe67fd0', 'InstanceId': 'i-08176669b146c5fec', 'Comment': '', 'DocumentName': 'AWS-RunShellScript', 'DocumentVersion': '$DEFAULT', 'PluginName': 'aws:runShellScript', 'ResponseCode': 0, 'ExecutionStartDateTime': '2022-07-01T09:04:12.487Z', 'ExecutionElapsedTime': 'PT13M26.654S', 'ExecutionEndDateTime': '2022-07-01T09:17:38.487Z', 'Status': 'Success', 'StatusDetails': 'Success', 'StandardOutputContent': 'max size: 28, sum size: 28, part_idx: 0\nCompiled: 1 functions\nEntry point: 0\nGlobals buffer: 0\ninterleave: 4\nPlatformId(0x55a5c0ae3cc0)\n[DeviceId(0x55a5c0ae86e0)]\nDeviceId(0x55a5c0ae86e0)\nDevice type: Ok(GPU)\nDevice name: Ok(Tesla T4)\nVendor: Ok(NVIDIA Corporation)\nOpenCL Version: Ok(3.0)\nOpenCL C Version: Ok(OpenCL C 1.2)\nNum. compute units: Ok(40)\nMax param size: Ok(4352)\nMax global mem size: Ok(15634661376)\nMax constant buffer size: Ok(65536)\nLinker available: Ok(true)\nOpenCL Extensions: Ok(cl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_3d_image_writes cl_khr_byte_addressable_store cl_khr_icd cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_copy_opts cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics cl_nv_kernel_attribute cl_khr_device_uuid cl_khr_pci_bus_info cl_khr_external_semaphore cl_khr_external_memory cl_khr_external_semaphore_opaque_fd cl_khr_external_memory_opaque_fd)\nCompile Flags: "-cl-nv-verbose"\nLink Flags: ""\nSucessfully compiled kernel to OpenCL C: saving to: /tmp/VectorVisor/examples/mem/memloop.wat.cl\nStarting kernel compilation...\nBuild time for kernel: 6.754707966s\nStarting server on: 0.0.0.0:8000/batch_submit\nAllocated: 12404.16 MB in OpenCL Buffers\nMem(0x55a5c2f1afe0)\n[0, 0, 0, 0]\nFinished data_init kernel\nstart: 1656667058\nvmm overhead 342317, context: 0x55a5c0b2af30\nkernel_exec_time: 162422062\nhcall send time: 3625743\nhcall dispatch time: 14242317\nhcall total recv time: 7107513\nend: 1656667059\nE2E execution time in nanoseconds: 263119185\nOn device time in nanoseconds: 236386688\nDevice Start-Queue overhead in nanoseconds: 20640\nMax Device Start-Queue overhead in nanoseconds: 7840\nMin Device Start-Queue overhead in nanoseconds: 7840\nAverage Device Start-Queue overhead in nanoseconds: 20640\nNumber of queue submits: 1\nfraction of time on device overhead: 0.00007844353880922823\nfraction of time on device: 0.8984015665752385\nfraction of time on hcall dispatch: 0.05412876677920692\nfraction of time on VMM overhead: 0.0013202800092285175\nContext saving overhead time for VM #0 (ns): 0\nAverage of first invokes: 7840, # first invokes: 1\n', 'StandardOutputUrl': '', 'StandardErrorContent': '[src/main.rs:333] matches.clone() = ArgMatches {\n    args: {\n        "partitions": MatchedArg {\n            occurs: 0,\n            indices: [\n                42,\n            ],\n            vals: [\n                "100",\n            ],\n        },\n        "disablefastcalls": MatchedArg {\n            occurs: 0,\n            indices: [\n                45,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "globals-buffer-size": MatchedArg {\n            occurs: 0,\n            indices: [\n                36,\n            ],\n            vals: [\n                "",\n            ],\n        },\n        "partition": MatchedArg {\n            occurs: 1,\n            indices: [\n                12,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "callstack": MatchedArg {\n            occurs: 0,\n            indices: [\n                30,\n            ],\n            vals: [\n                "1024",\n            ],\n        },\n        "ldflags": MatchedArg {\n            occurs: 0,\n            indices: [\n                33,\n            ],\n            vals: [\n                "",\n            ],\n        },\n        "max_smem_demo_space": MatchedArg {\n            occurs: 1,\n            indices: [\n                26,\n            ],\n            vals: [\n                "0",\n            ],\n        },\n        "vmcount": MatchedArg {\n            occurs: 1,\n            indices: [\n                16,\n            ],\n            vals: [\n                "4096",\n            ],\n        },\n        "cflags": MatchedArg {\n            occurs: 1,\n            indices: [\n                18,\n            ],\n            vals: [\n                "-cl-nv-verbose",\n            ],\n        },\n        "isgpu": MatchedArg {\n            occurs: 0,\n            indices: [\n                28,\n            ],\n            vals: [\n                "true",\n            ],\n        },\n        "maxdup": MatchedArg {\n            occurs: 0,\n            indices: [\n                44,\n            ],\n            vals: [\n                "1",\n            ],\n        },\n        "compile": MatchedArg {\n            occurs: 0,\n            indices: [\n                37,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "ip": MatchedArg {\n            occurs: 1,\n            indices: [\n                4,\n            ],\n            vals: [\n                "0.0.0.0",\n            ],\n        },\n        "input": MatchedArg {\n            occurs: 1,\n            indices: [\n                2,\n            ],\n            vals: [\n                "/tmp/VectorVisor/examples/mem/memloop.wat",\n            ],\n        },\n        "vmgroups": MatchedArg {\n            occurs: 0,\n            indices: [\n                27,\n            ],\n            vals: [\n                "1",\n            ],\n        },\n        "serverless": MatchedArg {\n            occurs: 1,\n            indices: [\n                14,\n            ],\n            vals: [\n                "true",\n            ],\n        },\n        "heap": MatchedArg {\n            occurs: 1,\n            indices: [\n                6,\n            ],\n            vals: [\n                "3145728",\n            ],\n        },\n        "forceinline": MatchedArg {\n            occurs: 0,\n            indices: [\n                39,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "entry": MatchedArg {\n            occurs: 0,\n            indices: [\n                34,\n            ],\n            vals: [\n                "",\n            ],\n        },\n        "jitcache": MatchedArg {\n            occurs: 0,\n            indices: [\n                38,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "stack": MatchedArg {\n            occurs: 1,\n            indices: [\n                8,\n            ],\n            vals: [\n                "1024",\n            ],\n        },\n        "interleave": MatchedArg {\n            occurs: 1,\n            indices: [\n                20,\n            ],\n            vals: [\n                "4",\n            ],\n        },\n        "mexec": MatchedArg {\n            occurs: 0,\n            indices: [\n                47,\n            ],\n            vals: [\n                "1",\n            ],\n        },\n        "debugcallprint": MatchedArg {\n            occurs: 0,\n            indices: [\n                31,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "reqtimeout": MatchedArg {\n            occurs: 0,\n            indices: [\n                48,\n            ],\n            vals: [\n                "2000",\n            ],\n        },\n        "pinput": MatchedArg {\n            occurs: 1,\n            indices: [\n                22,\n            ],\n            vals: [\n                "true",\n            ],\n        },\n        "port": MatchedArg {\n            occurs: 0,\n            indices: [\n                41,\n            ],\n            vals: [\n                "8000",\n            ],\n        },\n        "localworkgroup": MatchedArg {\n            occurs: 0,\n            indices: [\n                46,\n            ],\n            vals: [\n                "64",\n            ],\n        },\n        "hcallsize": MatchedArg {\n            occurs: 1,\n            indices: [\n                10,\n            ],\n            vals: [\n                "1024",\n            ],\n        },\n        "numfuncs": MatchedArg {\n            occurs: 0,\n            indices: [\n                35,\n            ],\n            vals: [\n                "",\n            ],\n        },\n        "nvidia": MatchedArg {\n            occurs: 0,\n            indices: [\n                29,\n            ],\n            vals: [\n                "true",\n            ],\n        },\n        "maxloc": MatchedArg {\n            occurs: 0,\n            indices: [\n                43,\n            ],\n            vals: [\n                "500000",\n            ],\n        },\n        "wasmtime": MatchedArg {\n            occurs: 0,\n            indices: [\n                40,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "printreturn": MatchedArg {\n            occurs: 0,\n            indices: [\n                32,\n            ],\n            vals: [\n                "false",\n            ],\n        },\n        "fastreply": MatchedArg {\n            occurs: 1,\n            indices: [\n                24,\n            ],\n            vals: [\n                "true",\n            ],\n        },\n    },\n    subcommand: None,\n    usage: Some(\n        "USAGE:\\n    vectorvisor [OPTIONS] --input <>",\n    ),\n}\n[src/main.rs:378] compile_args.clone() = "-cl-nv-verbose"\n[src/opencl_writer.rs:1892] program_start_mem_pages = 48\n[src/opencl_writer.rs:1893] program_start_max_pages = 48\n[src/opencl_runner.rs:695] buildinfo = ptxas info    : 0 bytes gmem\nptxas info    : Compiling entry function \'wasm_entry\' for \'sm_75\'\nptxas info    : Function properties for wasm_entry\nptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads\nptxas info    : Used 26 registers, 512 bytes cmem[0]\nptxas info    : Compiling entry function \'data_init\' for \'sm_75\'\nptxas info    : Function properties for data_init\nptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads\nptxas info    : Used 14 registers, 416 bytes cmem[0]\n[src/opencl_runner.rs:705] buildinfo2 = ptxas info    : 0 bytes gmem\nptxas info    : Compiling entry function \'wasm_entry\' for \'sm_75\'\nptxas info    : Function properties for wasm_entry\nptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads\nptxas info    : Used 26 registers, 512 bytes cmem[0]\nptxas info    : Compiling entry function \'data_init\' for \'sm_75\'\nptxas info    : Function properties for data_init\nptxas         .     0 bytes stack frame, 0 bytes spill stores, 0 bytes spill loads\nptxas info    : Used 14 registers, 416 bytes cmem[0]\n[src/opencl_runner.rs:1586] self.entry_point = 0\n[src/opencl_runner.rs:2125] print_return = false\n', 'StandardErrorUrl': '', 'CloudWatchOutputConfig': {'CloudWatchLogGroupName': '', 'CloudWatchOutputEnabled': False}, 'ResponseMetadata': {'RequestId': '1f0ebc8e-198f-4500-a002-ac0cb9bb9225', 'HTTPStatusCode': 200, 'HTTPHeaders': {'server': 'Server', 'date': 'Fri, 01 Jul 2022 09:17:42 GMT', 'content-type': 'application/x-amz-json-1.1', 'content-length': '11452', 'connection': 'keep-alive', 'x-amzn-requestid': '1f0ebc8e-198f-4500-a002-ac0cb9bb9225'}, 'RetryAttempts': 0}}